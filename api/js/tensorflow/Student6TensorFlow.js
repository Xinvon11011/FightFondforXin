// Student6TensorFlow.js

class Student6TensorFlow {
    constructor() {
        this.canvasElement = document.getElementById('resultCanvas');  // Assuming a canvas element exists in HTML
    }

    // Method to display the generated SVG on a canvas or div
    displaySVG(svgContent) {
        try {
            if (!svgContent) {
                throw new Error("No SVG content available for display.");
            }

            // Display the SVG inside the canvas or a div
            const canvas = this.canvasElement;

            // Clear any previous content
            canvas.innerHTML = '';

            // Insert the SVG into the canvas or result container
            canvas.innerHTML = svgContent;

            console.log('SVG displayed successfully.');
        } catch (error) {
            console.error('Error displaying SVG:', error);
            this.showError("Failed to display SVG content.");
        }
    }

    // Method to handle errors during display
    showError(errorMessage) {
        const errorElement = document.getElementById('errorMessage');  // Assuming an error message element in HTML
        if (errorElement) {
            errorElement.textContent = errorMessage;
            errorElement.style.display = 'block';  // Show the error message
        }
        console.error(errorMessage);
    }

    // Method to reset the display and clear content after failure
    resetDisplay() {
        const canvas = this.canvasElement;
        if (canvas) {
            canvas.innerHTML = '';  // Clear the canvas
        }
        const errorElement = document.getElementById('errorMessage');
        if (errorElement) {
            errorElement.style.display = 'none';  // Hide any previous error messages
        }
        console.log('Display reset successfully.');
    }
}

// Example Usage
const student6 = new Student6TensorFlow();

// Assuming the SVG content is already generated by Student 5
const svgContent = `<svg xmlns="http://www.w3.org/2000/svg" width="500" height="500">
    <rect x="50" y="50" width="100" height="100" style="fill:lightgray;stroke:black;stroke-width:2" />
    <text x="55" y="70" fill="black">Room 1</text>
</svg>`;

// Display the SVG
student6.displaySVG(svgContent);

// Handle errors if necessary (for testing, you can trigger it manually)
// student6.showError('Test error displaying SVG.');

export default Student6TensorFlow;
